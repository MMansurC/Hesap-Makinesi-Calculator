<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP8AAAD/AAAA/wdAQP8Kh4f/AxIS/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4CAgJbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBcAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gICAlsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAQFwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AgICWgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAEBAXAAAAD/AAAA/wAAAP8ICgf7EhcQ+AwQC+8KDQnsCQsI6ggLB+kRFhD2GB8W/xgf
        Fv8YHxb/GB8W/xceFf4OEg3yCQsI6gcJBuYFBgTjBQYE5AEBAfIAAAD/AAAA/wAAAP4CAgJbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBcAAAAP8AAAD/HCQZ/n6mb/eXyYX2lcaD6pTFguWUxYLilMWC4JfJ
        hfOazYj/ms2I/5rNiP+azYj/msyI/pbHhO2TxILhlMWC25PEgdOTxIHSaIpc0woNCfIAAAD/AAAA/gIC
        AlsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQFwAAAA/wAAAP9NY0X/r+qa/63omP+t6Jj/reiY/63o
        mP+t6Jj/reiY/63omP+t6Jj/reiY/63omP+t6Jj/reiY/63omP+t6Jj/reiY/63omP+r5Zf6OEkz9wAA
        AP8AAAD+AQEBWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAXEAAAD/AAAA/1NrS/+u6Zn/rOaX/6zm
        l/+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/63m
        mP9EVz3/AAAA/wAAAP4BAQFaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICcQAAAP8AAAD/U2tK/6/p
        mf+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/6zml/+s5pf/rOaX/6zm
        l/+s5pf/reaY/0RWPf8AAAD/AAAA/gICAlsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgJxAAAA/wAA
        AP85STP/p96T/6/qmf+v6Zn/r+mZ/6/pmf+v6Zn/r+mZ/6/pmf+v6Zn/r+mZ/6/pmf+v6Zn/r+mZ/6/p
        mf+v6Zn/r+mZ/6/qmv+h1o78KDMk+gAAAP8AAAD+AgICWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AXAAAAD/AAAA/wYIBv89Tjb/WXNP/1lzT/9Zc0//WXNP/1lzT/9Zc0//WXNP/1lzT/9Zc0//WXNP/1lz
        T/9Zc0//WXNP/1lzT/9Zc0//WHJO/zZGMf8DBAP+AAAA/wAAAP4CAgJbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBcAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gICAloAAAAAAAAAAAAA
        AAAAAAAAAAAAAAICAgAEBARVAQEB+gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADyAwMDQAIC
        AgAAAAAAAAAAAAAAAAAAAAAACQkJAAsLCxEDAwOiAQEB+AEBAf0BAQH9AQEB/QEBAf0BAQH9AQEB/QEB
        Af0BAQH9AQEB/QEBAf0BAQH9AQEB/QEBAf0BAQH9AQEB/QEBAf0BAQH9AQEB/QEBAf0BAQH9AQEB9AIC
        Ao4ICAgJBgYGAAAAAAAAAAAA4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAc=
</value>
  </data>
</root>